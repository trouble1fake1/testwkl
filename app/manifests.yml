apiVersion: v1
kind: Namespace
metadata:
  name: staging
---
# Service Account for nginx-pod
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod1-sa
  namespace: staging
---
# Service Account for internal-pod
apiVersion: v1
kind: ServiceAccount
metadata:
  name: internal-sa
  namespace: staging
---
# Pod 1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app-deployment
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      serviceAccountName: pod1-sa
      imagePullSecrets:
        - name: acr-secret
      containers:
        - name: nodejs-app
          image: wklcicd.azurecr.io/nodejs-app:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
---
# Service for nginx
apiVersion: v1
kind: Service
metadata:
  name: nodejs-app-service
  namespace: staging
spec:
  type: LoadBalancer
  selector:
    app: nodejs-app
  ports:
    - port: 80
      targetPort: 3000
---
# Pod 2 - internal pod
apiVersion: v1
kind: Pod
metadata:
  name: internal-pod
  namespace: staging
  labels:
    app: internal
spec:
  serviceAccountName: internal-sa
  containers:
    - name: internal
      image: alpine
      command: ["sleep", "3600"]
---
# Role for pod1-sa to list pods and exec into others
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: staging
  name: pod1-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
# RoleBinding for pod1-sa
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod1-rolebinding
  namespace: staging
subjects:
  - kind: ServiceAccount
    name: pod1-sa
    namespace: staging
roleRef:
  kind: Role
  name: pod1-role
  apiGroup: rbac.authorization.k8s.io
---
# Role for internal-sa to read secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: staging
  name: internal-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
# RoleBinding for internal-sa
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: internal-rolebinding
  namespace: staging
subjects:
  - kind: ServiceAccount
    name: internal-sa
    namespace: staging
roleRef:
  kind: Role
  name: internal-role
  apiGroup: rbac.authorization.k8s.io
